{
  "runtime": "Net90",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.3\",\r\n  \"info\": {\r\n    \"title\": \"Keycloak Admin REST API\",\r\n    \"description\": \"This is a REST API reference for the Keycloak Admin REST API.\",\r\n    \"version\": \"1.0\"\r\n  },\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"Attack Detection\"\r\n    },\r\n    {\r\n      \"name\": \"Authentication Management\"\r\n    },\r\n    {\r\n      \"name\": \"Client Attribute Certificate\"\r\n    },\r\n    {\r\n      \"name\": \"Client Initial Access\"\r\n    },\r\n    {\r\n      \"name\": \"Client Registration Policy\"\r\n    },\r\n    {\r\n      \"name\": \"Client Role Mappings\"\r\n    },\r\n    {\r\n      \"name\": \"Client Scopes\"\r\n    },\r\n    {\r\n      \"name\": \"Clients\"\r\n    },\r\n    {\r\n      \"name\": \"Component\"\r\n    },\r\n    {\r\n      \"name\": \"Groups\"\r\n    },\r\n    {\r\n      \"name\": \"Identity Providers\"\r\n    },\r\n    {\r\n      \"name\": \"Key\"\r\n    },\r\n    {\r\n      \"name\": \"Organizations\"\r\n    },\r\n    {\r\n      \"name\": \"Protocol Mappers\"\r\n    },\r\n    {\r\n      \"name\": \"Realms Admin\"\r\n    },\r\n    {\r\n      \"name\": \"Role Mapper\"\r\n    },\r\n    {\r\n      \"name\": \"Roles\"\r\n    },\r\n    {\r\n      \"name\": \"Roles (by ID)\"\r\n    },\r\n    {\r\n      \"name\": \"Scope Mappings\"\r\n    },\r\n    {\r\n      \"name\": \"Users\"\r\n    }\r\n  ],\r\n  \"paths\": {\r\n    \"/admin/realms\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get accessible realms Returns a list of accessible realms. The list is filtered based on what realms the caller is allowed to view.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": false,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RealmRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Import a realm. Imports a realm from a full representation of that realm.\",\r\n        \"description\": \"Realm name must be unique.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"format\": \"binary\",\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/admin/realms/{realm}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get the top-level representation of the realm It will not include nested information like User and Client representations.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RealmRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Update the top-level information of the realm Any user, roles or client information in the representation will be ignored.\",\r\n        \"description\": \"This will only update top-level attributes of the realm.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RealmRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Delete the realm\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/admin-events\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get admin events Returns all admin events, or filters events based on URL query parameters listed here\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"authClient\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"authIpAddress\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"authRealm\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"authUser\",\r\n            \"in\": \"query\",\r\n            \"description\": \"user id\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"dateFrom\",\r\n            \"in\": \"query\",\r\n            \"description\": \"From (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"dateTo\",\r\n            \"in\": \"query\",\r\n            \"description\": \"To (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"direction\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The direction to sort events by (asc or desc)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"operationTypes\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resourcePath\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resourceTypes\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/AdminEventRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Delete all admin events\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/attack-detection/brute-force/users\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Attack Detection\"\r\n        ],\r\n        \"summary\": \"Clear any user login failures for all users This can release temporary disabled users\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/attack-detection/brute-force/users/{userId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Attack Detection\"\r\n        ],\r\n        \"summary\": \"Get status of a username in brute force detection\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"userId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {}\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Attack Detection\"\r\n        ],\r\n        \"summary\": \"Clear any user login failures for the user This can release temporary disabled user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"userId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/authenticator-providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authenticator providers Returns a stream of authenticator providers.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {}\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/client-authenticator-providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get client authenticator providers Returns a stream of client authenticator providers.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {}\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/config\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Create new authenticator configuration\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/config-description/{providerId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authenticator provider's configuration description\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"providerId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthenticatorConfigInfoRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/config/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authenticator configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Configuration id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update authenticator configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Configuration id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Delete authenticator configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Configuration id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Add new authentication execution\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticationExecutionRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions/{executionId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get Single Execution\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthenticationExecutionRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Delete execution\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Execution id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions/{executionId}/config\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update execution with new configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Execution id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions/{executionId}/config/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get execution's configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Execution id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Configuration id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions/{executionId}/lower-priority\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Lower execution's priority\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Execution id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/executions/{executionId}/raise-priority\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Raise execution's priority\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"executionId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Execution id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authentication flows Returns a stream of authentication flows.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/AuthenticationFlowRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Create a new authentication flow\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticationFlowRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows/{flowAlias}/copy\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Copy existing authentication flow under a new name The new name is given as 'newName' attribute of the passed JSON object\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"flowAlias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"name of the existing authentication flow\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows/{flowAlias}/executions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authentication executions for a flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"flowAlias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Flow alias\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/AuthenticationExecutionInfoRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update authentication executions of a Flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"flowAlias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Flow alias\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticationExecutionInfoRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows/{flowAlias}/executions/execution\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Add new authentication execution to a flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"flowAlias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of parent flow\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {}\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows/{flowAlias}/executions/flow\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Add new flow with new execution to existing flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"flowAlias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of parent authentication flow\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {}\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/flows/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get authentication flow for id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Flow id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AuthenticationFlowRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update an authentication flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/AuthenticationFlowRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Delete an authentication flow\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Flow id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/form-action-providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get form action providers Returns a stream of form action providers.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {}\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/form-providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get form providers Returns a stream of form providers.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {}\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/per-client-config-description\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get configuration descriptions for all clients\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"type\": \"array\",\r\n                    \"items\": {\r\n                      \"$ref\": \"#/components/schemas/ConfigPropertyRepresentation\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/register-required-action\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Register a new required actions\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get required actions Returns a stream of required actions.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RequiredActionProviderRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions/{alias}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get required action for alias\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RequiredActionProviderRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update required action\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RequiredActionProviderRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Delete required action\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions/{alias}/config\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get RequiredAction configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RequiredActionConfigRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Update RequiredAction configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RequiredActionConfigRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Delete RequiredAction configuration\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions/{alias}/config-description\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get RequiredAction provider configuration description\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RequiredActionConfigInfoRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions/{alias}/lower-priority\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Lower required action's priority\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/required-actions/{alias}/raise-priority\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Raise required action's priority\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Alias of required action\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/authentication/unregistered-required-actions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Authentication Management\"\r\n        ],\r\n        \"summary\": \"Get unregistered required actions Returns a stream of unregistered required actions.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {\r\n                      \"type\": \"string\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-description-converter\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Base path for importing clients under this realm.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"application/xml\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"text/plain\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-policies/policies\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"include-global-policies\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientPoliciesRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientPoliciesRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-policies/profiles\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"include-global-profiles\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientProfilesRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientProfilesRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-registration-policy/providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Registration Policy\"\r\n        ],\r\n        \"summary\": \"Base path for retrieve providers with the configProperties properly filled\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ComponentTypeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Create a new client scope Client Scope’s name must be unique!\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Get representation of the client scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Update the client scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Delete the client scope\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/add-models\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create multiple mappers\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create a mapper\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/models/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mapper by id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Update the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Delete the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/protocol-mappers/protocol/{protocol}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers by name for a specific protocol\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"protocol\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get all scope mappings for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MappingsRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/clients/{client}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get the roles associated with a client's scope Returns roles for the client.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add client-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove client-level roles from the client's scope.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/clients/{client}/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"The available client-level roles Returns the roles for the client that can be associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/clients/{client}/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective client roles Returns the roles for the client that are associated with the client's scope.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add a set of realm-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove a set of realm-level roles from the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/realm/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that are available to attach to this client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-scopes/{client-scope-id}/scope-mappings/realm/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.\",\r\n        \"description\": \"The method is really to show a comprehensive total view of realm-level roles associated with the client.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-session-stats\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get client session stats Returns a JSON map.\",\r\n        \"description\": \"The key is the client id, the value is the number of sessions that currently are active with that client. Only clients that actually have a session associated with them will be in this map.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {\r\n                      \"type\": \"string\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Get client scopes belonging to the realm Returns a list of client scopes belonging to the realm\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Create a new client scope Client Scope’s name must be unique!\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Get representation of the client scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Update the client scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Client Scopes\"\r\n        ],\r\n        \"summary\": \"Delete the client scope\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/add-models\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create multiple mappers\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create a mapper\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/models/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mapper by id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Update the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Delete the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/protocol-mappers/protocol/{protocol}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers by name for a specific protocol\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"protocol\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get all scope mappings for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MappingsRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/clients/{client}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get the roles associated with a client's scope Returns roles for the client.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add client-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove client-level roles from the client's scope.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/clients/{client}/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"The available client-level roles Returns the roles for the client that can be associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/clients/{client}/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective client roles Returns the roles for the client that are associated with the client's scope.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add a set of realm-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove a set of realm-level roles from the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/realm/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that are available to attach to this client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-templates/{client-scope-id}/scope-mappings/realm/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.\",\r\n        \"description\": \"The method is really to show a comprehensive total view of realm-level roles associated with the client.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-scope-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/client-types\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"List all client types available in the current realm\",\r\n        \"description\": \"This endpoint returns a list of both global and realm level client types and the attributes they set\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientTypesRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Update a client type\",\r\n        \"description\": \"This endpoint allows you to update a realm level client type\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientTypesRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get clients belonging to the realm.\",\r\n        \"description\": \"If a client can’t be retrieved from the storage due to a problem with the underlying storage, it is silently removed from the returned list. This ensures that concurrent modifications to the list don’t prevent callers from retrieving this list.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"filter by clientId\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"the first result\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"the max results to return\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"whether this is a search query or a getClientById query\",\r\n            \"schema\": {\r\n              \"default\": false,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"viewableOnly\",\r\n            \"in\": \"query\",\r\n            \"description\": \"filter clients that cannot be viewed in full by admin\",\r\n            \"schema\": {\r\n              \"default\": false,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Create a new client Client’s client_id must be unique!\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients-initial-access\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Initial Access\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientInitialAccessPresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Initial Access\"\r\n        ],\r\n        \"summary\": \"Create a new initial access token.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientInitialAccessCreatePresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientInitialAccessCreatePresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients-initial-access/{id}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Client Initial Access\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get representation of the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Update the client\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Delete the client\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/import\": {\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/permission\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"owner\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"permission\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"policyId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resource\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resourceType\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/AbstractPolicyRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/permission/evaluate\": {\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/PolicyEvaluationRequest\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/PolicyEvaluationResponse\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/permission/providers\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/PolicyProviderRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/permission/search\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AbstractPolicyRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/policy\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"owner\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"permission\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"policyId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resource\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"resourceType\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/AbstractPolicyRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/policy/evaluate\": {\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/PolicyEvaluationRequest\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/PolicyEvaluationResponse\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/policy/providers\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/PolicyProviderRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/policy/search\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"fields\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AbstractPolicyRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"_id\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"deep\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exactName\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"matchingUri\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"owner\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"uri\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource/search\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource/{resource-id}\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/attributes\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/permissions\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/PolicyRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/resource/{resource-id}/scopes\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"resource-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"_id\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"deep\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"exactName\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"first\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"matchingUri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"max\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"name\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"owner\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"type\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"uri\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/scope\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scopeId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/scope/search\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/scope/{scope-id}\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/scope/{scope-id}/permissions\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/PolicyRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/scope/{scope-id}/resources\": {\r\n      \"get\": {\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/authz/resource-server/settings\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Get key info\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CertificateRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/download\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Get a keystore file for the client, containing private key and public certificate\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/KeyStoreConfig\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/octet-stream\": {\r\n                \"schema\": {\r\n                  \"format\": \"binary\",\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/generate\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Generate a new certificate with new key pair\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CertificateRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/generate-and-download\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Generate a new keypair and certificate, and get the private key file\\n\\nGenerates a keypair and certificate and serves the private key in a specified keystore format.\\nOnly generated public certificate is saved in Keycloak DB - the private key is not.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/KeyStoreConfig\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/octet-stream\": {\r\n                \"schema\": {\r\n                  \"format\": \"binary\",\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/upload\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Upload certificate and eventually private key\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CertificateRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/certificates/{attr}/upload-certificate\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Attribute Certificate\"\r\n        ],\r\n        \"summary\": \"Upload only certificate, not private key\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CertificateRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"attr\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/client-secret\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get the client secret\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Generate a new secret for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/client-secret/rotated\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get the rotated client secret\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Invalidate the rotated secret for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/default-client-scopes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get default client scopes.  Only name and ids are returned.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/default-client-scopes/{clientScopeId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/generate-example-access-token\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Create JSON with payload of example access token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"audience\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"userId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/AccessToken\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/generate-example-id-token\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Create JSON with payload of example id token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"audience\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"userId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/IDToken\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/generate-example-userinfo\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Create JSON with payload of example user info\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"userId\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/protocol-mappers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Return list of all protocol mappers, which will be used when generating tokens issued for particular client.\",\r\n        \"description\": \"This means protocol mappers assigned to this client directly and protocol mappers assigned to all client scopes of this client.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"scope\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperEvaluationRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/scope-mappings/{roleContainerId}/granted\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get effective scope mapping of all roles of particular role container, which this client is defacto allowed to have in the accessToken issued for him.\",\r\n        \"description\": \"This contains scope mappings, which this client has directly, as well as scope mappings, which are granted to all client scopes, which are linked with this client.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"roleContainerId\",\r\n          \"in\": \"path\",\r\n          \"description\": \"either realm name OR client UUID\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/evaluate-scopes/scope-mappings/{roleContainerId}/not-granted\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get roles, which this client doesn't have scope for and can't have them in the accessToken issued for him.\",\r\n        \"description\": \"Defacto all the other roles of particular role container, which are not in {@link #getGrantedScopeMappings()}\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"roleContainerId\",\r\n          \"in\": \"path\",\r\n          \"description\": \"either realm name OR client UUID\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"scope\",\r\n          \"in\": \"query\",\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/installation/providers/{providerId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"providerId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/nodes\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Register a cluster node with the client Manually register cluster node to this client - usually it’s not needed to call this directly as adapter should handle by sending registration request to Keycloak\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/nodes/{node}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Unregister a cluster node from the client\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"node\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/offline-session-count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get application offline session count Returns a number of offline user sessions associated with this client { \\\"count\\\": number }\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"format\": \"int64\",\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/offline-sessions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get offline sessions for client Returns a list of offline user sessions associated with this client\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Paging offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserSessionRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/optional-client-scopes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get optional client scopes.  Only name and ids are returned.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/optional-client-scopes/{clientScopeId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/add-models\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create multiple mappers\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Create a mapper\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/models/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mapper by id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Update the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Delete the mapper\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/protocol-mappers/protocol/{protocol}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Protocol Mappers\"\r\n        ],\r\n        \"summary\": \"Get mappers by name for a specific protocol\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"protocol\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/push-revocation\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Push the client's revocation policy to its admin URL If the client has an admin URL, push revocation policy to it.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GlobalRequestResult\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/registration-access-token\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Generate a new registration access token for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get all roles for the realm or client\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": \"\",\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Create a new role for the realm or client\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Update a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Delete a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/composites\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get composites of the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Add a composite to the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Remove roles from the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/composites/clients/{client-uuid}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get client-level roles for the client that are in the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client-uuid\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/composites/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles of the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/groups\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Returns a stream of groups that have the specified role name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"the role name.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return a full representation of the {@code GroupRepresentation} objects.\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"first result to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"maximum number of results to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/roles/{role-name}/users\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Returns a stream of users that have the specified role name.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"the role name.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether brief representations are returned (default: false)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"first result to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"maximum number of results to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get all scope mappings for the client\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MappingsRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/clients/{client}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get the roles associated with a client's scope Returns roles for the client.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add client-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove client-level roles from the client's scope.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/clients/{client}/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"The available client-level roles Returns the roles for the client that can be associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/clients/{client}/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective client roles Returns the roles for the client that are associated with the client's scope.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles associated with the client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Add a set of realm-level roles to the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Remove a set of realm-level roles from the client's scope\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/realm/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that are available to attach to this client's scope\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/scope-mappings/realm/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Scope Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective realm-level roles associated with the client’s scope What this does is recurse any composite roles associated with the client’s scope and adds the roles to this lists.\",\r\n        \"description\": \"The method is really to show a comprehensive total view of realm-level roles associated with the client.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/service-account-user\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get a user dedicated to the service account\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/session-count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get application session count Returns a number of user sessions associated with this client { \\\"count\\\": number }\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"format\": \"int64\",\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/test-nodes-available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Test if registered cluster nodes are available Tests availability by sending 'ping' request to all cluster nodes.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GlobalRequestResult\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/clients/{client-uuid}/user-sessions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Clients\"\r\n        ],\r\n        \"summary\": \"Get user sessions for client Returns a list of user sessions associated with this client\\n\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Paging offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserSessionRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-uuid\",\r\n          \"in\": \"path\",\r\n          \"description\": \"id of client (not client-id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/components\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"parent\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ComponentRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ComponentRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/components/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ComponentRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ComponentRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/components/{id}/sub-component-types\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Component\"\r\n        ],\r\n        \"summary\": \"List of subcomponent types that are available to configure for a particular parent component.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ComponentTypeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/credential-registrators\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-default-client-scopes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get realm default client scopes. Only name and ids are returned.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-default-client-scopes/{clientScopeId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-groups\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get group hierarchy.  Only name and ids are returned.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-groups/{groupId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"groupId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"groupId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-optional-client-scopes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get realm optional client scopes. Only name and ids are returned.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/default-optional-client-scopes/{clientScopeId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientScopeId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/events\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get events Returns all events, or filters them based on URL query parameters listed here\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client\",\r\n            \"in\": \"query\",\r\n            \"description\": \"App or oauth client name\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"dateFrom\",\r\n            \"in\": \"query\",\r\n            \"description\": \"From (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"dateTo\",\r\n            \"in\": \"query\",\r\n            \"description\": \"To (inclusive) date (yyyy-MM-dd) or time in Epoch timestamp millis (number of milliseconds since January 1, 1970, 00:00:00 GMT)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"direction\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The direction to sort events by (asc or desc)\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Paging offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"ipAddress\",\r\n            \"in\": \"query\",\r\n            \"description\": \"IP Address\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"type\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The types of events to return\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"user\",\r\n            \"in\": \"query\",\r\n            \"description\": \"User id\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/EventRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Delete all events\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/events/config\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Get the events provider configuration Returns JSON object with events provider configuration\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RealmEventsConfigRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"description\": \"Update the events provider Change the events provider and/or its configuration\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RealmEventsConfigRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/group-by-path/{path}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"path\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"pattern\": \".*\",\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Get group hierarchy.  Only `name` and `id` are returned.  `subGroups` are only returned when using the `search` or `q` parameter. If none of these parameters is provided, the top-level groups are returned without `subGroups` being filled.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exact\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": \"false\",\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"populateHierarchy\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"create or add a top level realm groupSet or create child.\",\r\n        \"description\": \"This will update the group and set the parent if it exists. Create it and set the parent if the group doesn’t exist.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Returns the groups counts.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"top\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": false,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"format\": \"int64\",\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Update group, ignores subgroups.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/children\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Return a paginated list of subgroups that have a parent group corresponding to the group on the URL\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether brief groups representations are returned or not (default: false)\",\r\n            \"schema\": {\r\n              \"default\": \"false\",\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exact\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether the params \\\"search\\\" must match exactly or not\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The position of the first result to be returned (pagination offset).\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"0\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The maximum number of results that are to be returned. Defaults to 10\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"10\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String representing either an exact group name or a partial name\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Set or create child.\",\r\n        \"description\": \"This will just set the parent if it exists. Create it and set the parent if the group doesn’t exist.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/members\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Groups\"\r\n        ],\r\n        \"summary\": \"Get users Returns a stream of users, filtered according to query parameters\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Only return basic information (only guaranteed to return id, username, created, first and last name, email, enabled state, email verification state, federation link, and access. Note that it means that namely user attributes, required actions, and not before are not returned.)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Pagination offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get role mappings\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MappingsRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/clients/{client-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get client-level role mappings for the user or group, and the app\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Add client-level roles to the user or group role mapping\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Delete client-level roles from user or group role mapping\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/clients/{client-id}/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get available client-level roles that can be mapped to the user or group\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/clients/{client-id}/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective client-level role mappings This recurses any composite roles\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get realm-level role mappings\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Add realm-level role mappings to the user\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Delete realm-level role mappings\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/realm/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that can be mapped\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/groups/{group-id}/role-mappings/realm/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get effective realm-level role mappings This will recurse all composite roles to get the result.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"group-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/import-config\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Import identity provider from JSON body\",\r\n        \"description\": \"Import identity provider from uploaded JSON file\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {}\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"List identity providers\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether brief representations are returned (default: false)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Pagination offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"realmOnly\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines if only realm-level IDPs (not associated with orgs) should be returned (default: false)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter specific providers by name. Search can be prefix (name*), contains (*name*) or exact (\\\"name\\\"). Default prefixed.\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Create a new identity provider\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Get the identity provider\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Update the identity provider\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Delete the identity provider\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/export\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Export public broker configuration for identity provider\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"format\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Format to use\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Return object stating whether client Authorization permissions have been initialized or not and a reference\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/mapper-types\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Get mapper types for identity provider\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"*/*\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"$ref\": \"#/components/schemas/IdentityProviderMapperTypeRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/mappers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Get mappers for identity provider\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/IdentityProviderMapperRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Add a mapper to identity provider\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/IdentityProviderMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/mappers/{id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Get mapper by id for the identity provider\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/IdentityProviderMapperRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Update a mapper for the identity provider\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/IdentityProviderMapperRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Delete a mapper for the identity provider\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Mapper id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/instances/{alias}/reload-keys\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Reaload keys for the identity provider if the provider supports it, \\\"true\\\" is returned if reload was performed, \\\"false\\\" if not.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"boolean\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"alias\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/identity-provider/providers/{provider_id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Identity Providers\"\r\n        ],\r\n        \"summary\": \"Get the identity provider factory for that provider id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"provider_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The provider id to get the factory\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/keys\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Key\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/KeysMetadataRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/localization\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/localization/{locale}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"useRealmDefaultLocaleFallback\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            },\r\n            \"deprecated\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Import localization from uploaded JSON file\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/localization/{locale}/{key}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"text/plain\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"key\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"locale\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/logout-all\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Removes all user sessions.\",\r\n        \"description\": \"Any client that has an admin url will also be told to invalidate any sessions they have.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GlobalRequestResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns a paginated list of organizations filtered according to the specified parameters\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return the full representation. Otherwise, only the basic fields are returned.\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exact\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether the param 'search' must match exactly or not\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The position of the first result to be processed (pagination offset)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"0\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The maximum number of results to be returned - defaults to 10\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"10\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A query to search for custom attributes, in the format 'key1:value2 key2:value2'\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String representing either an organization name or domain\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Creates a new organization\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/members/{member-id}/organizations\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns the organizations associated with the user that has the specified id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"member-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns the organization representation\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Updates the organization\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Deletes the organization\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/identity-providers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns all identity providers associated with the organization\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Adds the identity provider with the specified id to the organization\",\r\n        \"description\": \"Adds, or associates, an existing identity provider with the organization. If no identity provider is found, or if it is already associated with the organization, an error response is returned\",\r\n        \"requestBody\": {\r\n          \"description\": \"Payload should contain only id or alias of the identity provider to be associated with the organization (id or alias with or without quotes). Surrounding whitespace characters will be trimmed.\",\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/identity-providers/{alias}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns the identity provider associated with the organization that has the specified alias\",\r\n        \"description\": \"Searches for an identity provider with the given alias. If one is found and is associated with the organization, it is returned. Otherwise, an error response with status NOT_FOUND is returned\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Removes the identity provider with the specified alias from the organization\",\r\n        \"description\": \"Breaks the association between the identity provider and the organization. The provider itself is not deleted. If no provider is found, or if it is not currently associated with the org, an error response is returned\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"alias\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns a paginated list of organization members filtered according to the specified parameters\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"exact\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether the param 'search' must match exactly or not\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The position of the first result to be processed (pagination offset)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"0\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The maximum number of results to be returned. Defaults to 10\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"default\": \"10\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"membershipType\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The membership type\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String representing either a member's username, e-mail, first name, or last name.\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/MemberRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Adds the user with the specified id as a member of the organization\",\r\n        \"description\": \"Adds, or associates, an existing user with the organization. If no user is found, or if it is already associated with the organization, an error response is returned\",\r\n        \"requestBody\": {\r\n          \"description\": \"Payload should contain only id of the user to be added to the organization (UUID with or without quotes). Surrounding whitespace characters will be trimmed.\",\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns number of members in the organization.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"format\": \"int64\",\r\n                  \"type\": \"integer\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members/invite-existing-user\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Invites an existing user to the organization, using the specified user id\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/x-www-form-urlencoded\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members/invite-user\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Invites an existing user or sends a registration link to a new user, based on the provided e-mail address.\",\r\n        \"description\": \"If the user with the given e-mail address exists, it sends an invitation link, otherwise it sends a registration link.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/x-www-form-urlencoded\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"email\": {\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"firstName\": {\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"lastName\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members/{member-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns the member of the organization with the specified id\",\r\n        \"description\": \"Searches for auser with the given id. If one is found, and is currently a member of the organization, returns it. Otherwise,an error response with status NOT_FOUND is returned\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"member-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MemberRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Removes the user with the specified id from the organization\",\r\n        \"description\": \"Breaks the association between the user and organization. The user itself is deleted in case the membership is managed, otherwise the user is not deleted. If no user is found, or if they are not a member of the organization, an error response is returned\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"member-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/organizations/{org-id}/members/{member-id}/organizations\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Organizations\"\r\n        ],\r\n        \"summary\": \"Returns the organizations associated with the user that has the specified id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"member-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"org-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/partial-export\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Partial export of existing realm into a JSON file.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"exportClients\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exportGroupsAndRoles\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RealmRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/partialImport\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Partial import from a JSON file to an existing realm.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"format\": \"binary\",\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/push-revocation\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Push the realm's revocation policy to any client that has an admin url associated with it.\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GlobalRequestResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get all roles for the realm or client\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": \"\",\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Create a new role for the realm or client\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles-by-id/{role-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Get a specific role's representation\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"id of role\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Update the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"id of role\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Delete the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"id of role\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles-by-id/{role-id}/composites\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Get role's children Returns a set of role's children provided the role is a composite.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Make the role a composite role by associating some child roles\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Remove a set of roles from the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Role id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles-by-id/{role-id}/composites/clients/{clientUuid}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Get client-level roles for the client that are in the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientUuid\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles-by-id/{role-id}/composites/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that are in the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles-by-id/{role-id}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles (by ID)\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Update a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Delete a role by name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/composites\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get composites of the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Add a composite to the role\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Remove roles from the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/composites/clients/{client-uuid}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get client-level roles for the client that are in the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client-uuid\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/composites/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles of the role's composite\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"role's name (not id!)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/groups\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Returns a stream of groups that have the specified role name\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"the role name.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return a full representation of the {@code GroupRepresentation} objects.\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"first result to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"maximum number of results to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/management/permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Return object stating whether role Authorization permissions have been initialized or not and a reference\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/roles/{role-name}/users\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Roles\"\r\n        ],\r\n        \"summary\": \"Returns a stream of users that have the specified role name.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"role-name\",\r\n            \"in\": \"path\",\r\n            \"description\": \"the role name.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether brief representations are returned (default: false)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"first result to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"maximum number of results to return. Ignored if negative or {@code null}.\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/sessions/{session}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Remove a specific user session.\",\r\n        \"description\": \"Any client that has an admin url will also be told to invalidate this particular session.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"session\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"isOffline\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": false,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/testSMTPConnection\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"summary\": \"Test SMTP connection with current logged in user\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"additionalProperties\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            },\r\n            \"application/x-www-form-urlencoded\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"config\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get users Returns a stream of users, filtered according to query parameters.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether brief representations are returned (default: false)\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"email\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String contained in email, or the complete email, if param \\\"exact\\\" is true\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"emailVerified\",\r\n            \"in\": \"query\",\r\n            \"description\": \"whether the email has been verified\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"enabled\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean representing if user is enabled or not\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"exact\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean which defines whether the params \\\"last\\\", \\\"first\\\", \\\"email\\\" and \\\"username\\\" must match exactly\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Pagination offset\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"firstName\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String contained in firstName, or the complete firstName, if param \\\"exact\\\" is true\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"idpAlias\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The alias of an Identity Provider linked to the user\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"idpUserId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The userId at an Identity Provider linked to the user\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"lastName\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String contained in lastName, or the complete lastName, if param \\\"exact\\\" is true\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Maximum results size (defaults to 100)\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A query to search for custom attributes, in the format 'key1:value2 key2:value2'\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String contained in username, first or last name, or email. Default search behavior is prefix-based (e.g., foo or foo*). Use *foo* for infix search and \\\"foo\\\" for exact search.\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"query\",\r\n            \"description\": \"A String contained in username, or the complete username, if param \\\"exact\\\" is true\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Create a new user Username must be unique.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Created\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\",\r\n            \"content\": {}\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users-management-permissions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Realms Admin\"\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ManagementPermissionReference\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Returns the number of users that match the given criteria.\",\r\n        \"description\": \"It can be called in three different ways. 1. Don’t specify any criteria and pass {@code null}. The number of all users within that realm will be returned. <p> 2. If {@code search} is specified other criteria such as {@code last} will be ignored even though you set them. The {@code search} string will be matched against the first and last name, the username and the email of a user. <p> 3. If {@code search} is unspecified but any of {@code last}, {@code first}, {@code email} or {@code username} those criteria are matched against their respective fields on a user entity. Combined with a logical and.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"email\",\r\n            \"in\": \"query\",\r\n            \"description\": \"email filter\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"emailVerified\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"enabled\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Boolean representing if user is enabled or not\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"firstName\",\r\n            \"in\": \"query\",\r\n            \"description\": \"first name filter\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"lastName\",\r\n            \"in\": \"query\",\r\n            \"description\": \"last name filter\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"q\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"description\": \"arbitrary search string for all the fields below. Default search behavior is prefix-based (e.g., foo or foo*). Use *foo* for infix search and \\\"foo\\\" for exact search.\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"query\",\r\n            \"description\": \"username filter\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"format\": \"int32\",\r\n                  \"type\": \"integer\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/profile\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"description\": \"Get the configuration for the user profile\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UPConfig\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"description\": \"Set the configuration for the user profile\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UPConfig\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UPConfig\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/profile/metadata\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"description\": \"Get the UserProfileMetadata from the configuration\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserProfileMetadata\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get representation of the user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"userProfileMetadata\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Indicates if the user profile metadata should be added to the response\",\r\n            \"schema\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Update the user\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\",\r\n            \"content\": {}\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Delete the user\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/configured-user-storage-credential-types\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Return credential types, which are provided by the user storage where user is stored.\",\r\n        \"description\": \"Returned values can contain for example \\\"password\\\", \\\"otp\\\" etc. This will always return empty list for \\\"local\\\" users, which are not backed by any user storage\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/consents\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get consents granted by the user\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"type\": \"object\",\r\n                    \"additionalProperties\": {}\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/consents/{client}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Revoke consent and offline tokens for particular client from user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Client id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/credentials\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/credentials/{credentialId}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Remove a credential for a user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentialId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/credentials/{credentialId}/moveAfter/{newPreviousCredentialId}\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Move a credential to a position behind another credential\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentialId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The credential to move\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"newPreviousCredentialId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The credential that will be the previous element in the list. If set to null, the moved credential will be the first element in the list.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/credentials/{credentialId}/moveToFirst\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Move a credential to a first position in the credentials list of the user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentialId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The credential to move\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/credentials/{credentialId}/userLabel\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Update a credential label for a user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentialId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"text/plain\": {\r\n              \"schema\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/disable-credential-types\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Disable all credentials for a user of a specific type\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/execute-actions-email\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Send an email to the user with a link they can click to execute particular actions.\",\r\n        \"description\": \"An email contains a link the user can click to perform a set of required actions. The redirectUri and clientId parameters are optional. If no redirect is given, then there will be no link back to click after actions have completed. Redirect uri must be a valid uri for the particular clientId.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Client id\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"lifespan\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Number of seconds after which the generated token expires\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"redirect_uri\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Redirect uri\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/federated-identity\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get social logins associated with the user\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/FederatedIdentityRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/federated-identity/{provider}\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Add a social login provider to the user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"provider\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Social login provider id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Conflict\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Remove a social login provider from user\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"provider\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Social login provider id\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/groups\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"first\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"max\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/groups/count\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"search\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"format\": \"int64\",\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/groups/{groupId}\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"groupId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"groupId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/impersonation\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Impersonate the user\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {}\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ErrorRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/logout\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Remove all user sessions associated with the user Also send notification to all clients that have an admin URL to invalidate the sessions for the particular user.\",\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/offline-sessions/{clientUuid}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get offline sessions associated with the user and client\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"clientUuid\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserSessionRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/reset-password\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Set up a new password for the user.\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/reset-password-email\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Send an email to the user with a link they can click to reset their password.\",\r\n        \"description\": \"The redirectUri and clientId parameters are optional. The default for the redirect is the account client. This endpoint has been deprecated.  Please use the execute-actions-email passing a list with UPDATE_PASSWORD within it.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"in\": \"query\",\r\n            \"description\": \"client id\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"redirect_uri\",\r\n            \"in\": \"query\",\r\n            \"description\": \"redirect uri\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get role mappings\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/MappingsRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/clients/{client-id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get client-level role mappings for the user or group, and the app\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Add client-level roles to the user or group role mapping\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Delete client-level roles from user or group role mapping\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/clients/{client-id}/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get available client-level roles that can be mapped to the user or group\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/clients/{client-id}/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Client Role Mappings\"\r\n        ],\r\n        \"summary\": \"Get effective client-level role mappings This recurses any composite roles\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"client-id\",\r\n          \"in\": \"path\",\r\n          \"description\": \"client id (not clientId!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/realm\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get realm-level role mappings\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Add realm-level role mappings to the user\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Delete realm-level role mappings\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/realm/available\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get realm-level roles that can be mapped\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/role-mappings/realm/composite\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Role Mapper\"\r\n        ],\r\n        \"summary\": \"Get effective realm-level role mappings This will recurse all composite roles to get the result.\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"briefRepresentation\",\r\n            \"in\": \"query\",\r\n            \"description\": \"if false, return roles with their attributes\",\r\n            \"schema\": {\r\n              \"default\": true,\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/send-verify-email\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Send an email-verification email to the user An email contains a link the user can click to verify their email address.\",\r\n        \"description\": \"The redirectUri, clientId and lifespan parameters are optional. The default for the redirect is the account client. The default for the lifespan is 12 hours\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"client_id\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Client id\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"lifespan\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Number of seconds after which the generated token expires\",\r\n            \"schema\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"redirect_uri\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Redirect uri\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {}\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal Server Error\",\r\n            \"content\": {}\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/sessions\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"summary\": \"Get sessions associated with the user\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/UserSessionRepresentation\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"/admin/realms/{realm}/users/{user-id}/unmanagedAttributes\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Users\"\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"object\",\r\n                  \"additionalProperties\": {\r\n                    \"type\": \"array\",\r\n                    \"items\": {\r\n                      \"type\": \"string\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\"\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"realm\",\r\n          \"in\": \"path\",\r\n          \"description\": \"realm name (not id!)\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"user-id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"schema\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"AbstractPolicyRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"policies\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"resources\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"logic\": {\r\n            \"$ref\": \"#/components/schemas/Logic\"\r\n          },\r\n          \"decisionStrategy\": {\r\n            \"$ref\": \"#/components/schemas/DecisionStrategy\"\r\n          },\r\n          \"owner\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourceType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourcesData\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n            }\r\n          },\r\n          \"scopesData\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"Access\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"roles\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"verify_caller\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"AccessToken\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"jti\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"exp\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"nbf\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"iat\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"iss\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"sub\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"typ\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"azp\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"otherClaims\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"nonce\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"auth_time\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"sid\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"at_hash\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"c_hash\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"given_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"family_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"middle_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"nickname\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"preferred_username\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"profile\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"picture\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"website\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email_verified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"gender\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"birthdate\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"zoneinfo\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"locale\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone_number\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone_number_verified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"address\": {\r\n            \"$ref\": \"#/components/schemas/AddressClaimSet\"\r\n          },\r\n          \"updated_at\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"claims_locales\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"acr\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"s_hash\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"trusted-certs\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"allowed-origins\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"realm_access\": {\r\n            \"$ref\": \"#/components/schemas/Access\"\r\n          },\r\n          \"resource_access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"$ref\": \"#/components/schemas/Access\"\r\n            },\r\n            \"writeOnly\": true\r\n          },\r\n          \"authorization\": {\r\n            \"$ref\": \"#/components/schemas/Authorization\"\r\n          },\r\n          \"cnf\": {\r\n            \"$ref\": \"#/components/schemas/Confirmation\"\r\n          },\r\n          \"scope\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"AddressClaimSet\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"formatted\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"street_address\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"locality\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"region\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"postal_code\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"AdminEventRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"realmId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authDetails\": {\r\n            \"$ref\": \"#/components/schemas/AuthDetailsRepresentation\"\r\n          },\r\n          \"operationType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourceType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourcePath\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"representation\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"error\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"details\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ApplicationRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"rootUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"adminUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"baseUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"surrogateAuthRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"alwaysDisplayInConsole\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"clientAuthenticatorType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"secret\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"registrationAccessToken\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"defaultRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"redirectUris\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webOrigins\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bearerOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"consentRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"standardFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"implicitFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directAccessGrantsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"serviceAccountsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authorizationServicesEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directGrantsOnly\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"publicClient\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"frontchannelLogout\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authenticationFlowBindingOverrides\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"fullScopeAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"nodeReRegistrationTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"registeredNodes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          },\r\n          \"clientTemplate\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateConfig\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateScope\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateMappers\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"defaultClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"optionalClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authorizationSettings\": {\r\n            \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          \"origin\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"claims\": {\r\n            \"type\": \"object\",\r\n            \"allOf\": [\r\n              {\r\n                \"$ref\": \"#/components/schemas/ClaimRepresentation\"\r\n              }\r\n            ],\r\n            \"deprecated\": true\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"AuthDetailsRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realmId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"ipAddress\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticationExecutionExportRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"authenticatorConfig\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticator\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticatorFlow\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"requirement\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"autheticatorFlow\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"flowAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userSetupAllowed\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticationExecutionInfoRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"requirement\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"requirementChoices\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"configurable\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authenticationFlow\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticationConfig\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"flowId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"level\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"index\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticationExecutionRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"authenticatorConfig\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticator\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticatorFlow\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"requirement\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"autheticatorFlow\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"flowId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"parentFlow\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticationFlowRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"topLevel\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"builtIn\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authenticationExecutions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/AuthenticationExecutionExportRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticatorConfigInfoRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpText\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ConfigPropertyRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"AuthenticatorConfigRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"Authorization\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"permissions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/Permission\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"AuthorizationSchema\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"resourceTypes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"$ref\": \"#/components/schemas/ResourceType\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"BruteForceStrategy\": {\r\n        \"enum\": [\r\n          \"LINEAR\",\r\n          \"MULTIPLE\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"CertificateRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"privateKey\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"publicKey\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"certificate\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"kid\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"ClaimRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"username\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"profile\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"picture\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"website\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"gender\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"locale\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"address\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"phone\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientInitialAccessCreatePresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"expiration\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"count\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientInitialAccessPresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"token\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"timestamp\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"expiration\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"count\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"remainingCount\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientMappingsRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"client\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"mappings\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientPoliciesRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"policies\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientPolicyRepresentation\"\r\n            }\r\n          },\r\n          \"globalPolicies\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientPolicyRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientPolicyConditionRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"condition\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"configuration\": {\r\n            \"type\": \"array\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientPolicyExecutorRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"executor\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"configuration\": {\r\n            \"type\": \"array\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientPolicyRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"conditions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientPolicyConditionRepresentation\"\r\n            }\r\n          },\r\n          \"profiles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientProfileRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"executors\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientPolicyExecutorRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientProfilesRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"profiles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientProfileRepresentation\"\r\n            }\r\n          },\r\n          \"globalProfiles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientProfileRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"rootUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"adminUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"baseUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"surrogateAuthRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"alwaysDisplayInConsole\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"clientAuthenticatorType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"secret\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"registrationAccessToken\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"defaultRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"redirectUris\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webOrigins\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bearerOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"consentRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"standardFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"implicitFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directAccessGrantsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"serviceAccountsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authorizationServicesEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directGrantsOnly\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"publicClient\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"frontchannelLogout\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authenticationFlowBindingOverrides\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"fullScopeAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"nodeReRegistrationTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"registeredNodes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          },\r\n          \"clientTemplate\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateConfig\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateScope\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateMappers\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"defaultClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"optionalClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authorizationSettings\": {\r\n            \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          \"origin\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"ClientScopeRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientTemplateRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"fullScopeAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"bearerOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"consentRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"standardFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"implicitFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directAccessGrantsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"serviceAccountsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"publicClient\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"frontchannelLogout\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"ClientTypeRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"provider\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"parent\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"$ref\": \"#/components/schemas/PropertyConfig\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ClientTypesRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"client-types\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientTypeRepresentation\"\r\n            }\r\n          },\r\n          \"global-client-types\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientTypeRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ComponentExportRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"subType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"subComponents\": {\r\n            \"$ref\": \"#/components/schemas/MultivaluedHashMapStringComponentExportRepresentation\"\r\n          },\r\n          \"config\": {\r\n            \"$ref\": \"#/components/schemas/MultivaluedHashMapStringString\"\r\n          }\r\n        }\r\n      },\r\n      \"ComponentRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"parentId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"subType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"$ref\": \"#/components/schemas/MultivaluedHashMapStringString\"\r\n          }\r\n        }\r\n      },\r\n      \"ComponentTypeRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpText\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ConfigPropertyRepresentation\"\r\n            }\r\n          },\r\n          \"metadata\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          }\r\n        }\r\n      },\r\n      \"Composites\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realm\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"client\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"application\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"ConfigPropertyRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"label\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpText\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"defaultValue\": {},\r\n          \"options\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"secret\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"required\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"readOnly\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"Confirmation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"x5t#S256\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"jkt\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"CredentialRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userLabel\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"createdDate\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"secretData\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"credentialData\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"value\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"temporary\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"device\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"hashedSaltedValue\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"salt\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"hashIterations\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\",\r\n            \"deprecated\": true\r\n          },\r\n          \"counter\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\",\r\n            \"deprecated\": true\r\n          },\r\n          \"algorithm\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"digits\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\",\r\n            \"deprecated\": true\r\n          },\r\n          \"period\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\",\r\n            \"deprecated\": true\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"allOf\": [\r\n              {\r\n                \"$ref\": \"#/components/schemas/MultivaluedHashMapStringString\"\r\n              }\r\n            ],\r\n            \"deprecated\": true\r\n          },\r\n          \"federationLink\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"DecisionEffect\": {\r\n        \"enum\": [\r\n          \"PERMIT\",\r\n          \"DENY\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"DecisionStrategy\": {\r\n        \"enum\": [\r\n          \"AFFIRMATIVE\",\r\n          \"UNANIMOUS\",\r\n          \"CONSENSUS\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"EnforcementMode\": {\r\n        \"enum\": [\r\n          \"PERMISSIVE\",\r\n          \"ENFORCING\",\r\n          \"DISABLED\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ErrorRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"field\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"errorMessage\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"params\": {\r\n            \"type\": \"array\",\r\n            \"items\": {}\r\n          },\r\n          \"errors\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ErrorRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"EvaluationResultRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"resource\": {\r\n            \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n          },\r\n          \"scopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          },\r\n          \"policies\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/PolicyResultRepresentation\"\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"$ref\": \"#/components/schemas/DecisionEffect\"\r\n          },\r\n          \"allowedScopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          },\r\n          \"deniedScopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"EventRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"realmId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"sessionId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"ipAddress\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"error\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"details\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"FederatedIdentityRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"identityProvider\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userName\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"GlobalRequestResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"successRequests\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"failedRequests\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"GroupRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"path\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"parentId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"subGroupCount\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"subGroups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n            }\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"realmRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"clientRoles\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"IDToken\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"jti\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"exp\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"nbf\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"iat\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"iss\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"sub\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"typ\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"azp\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"otherClaims\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"nonce\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"auth_time\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"sid\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"at_hash\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"c_hash\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"given_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"family_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"middle_name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"nickname\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"preferred_username\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"profile\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"picture\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"website\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email_verified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"gender\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"birthdate\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"zoneinfo\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"locale\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone_number\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone_number_verified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"address\": {\r\n            \"$ref\": \"#/components/schemas/AddressClaimSet\"\r\n          },\r\n          \"updated_at\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"claims_locales\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"acr\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"s_hash\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"IdentityProviderMapperRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"identityProviderAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"identityProviderMapper\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"IdentityProviderMapperTypeRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"category\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpText\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"properties\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ConfigPropertyRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"IdentityProviderRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"internalId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"updateProfileFirstLoginMode\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"trustEmail\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"storeToken\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"addReadTokenRoleOnCreate\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authenticateByDefault\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"linkOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"hideOnLogin\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"firstBrokerLoginFlowAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"postBrokerLoginFlowAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizationId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"updateProfileFirstLogin\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"InstallationAdapterConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"realm-public-key\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"auth-server-url\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"ssl-required\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"bearer-only\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"resource\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"public-client\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"verify-token-audience\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"credentials\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"use-resource-role-mappings\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"confidential-port\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"policy-enforcer\": {\r\n            \"$ref\": \"#/components/schemas/PolicyEnforcerConfig\"\r\n          }\r\n        }\r\n      },\r\n      \"KeyMetadataRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerPriority\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"kid\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"algorithm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"publicKey\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"certificate\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"use\": {\r\n            \"$ref\": \"#/components/schemas/KeyUse\"\r\n          },\r\n          \"validTo\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"KeyStoreConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realmCertificate\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"storePassword\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"keyPassword\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"keyAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"realmAlias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"format\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"KeyUse\": {\r\n        \"enum\": [\r\n          \"SIG\",\r\n          \"ENC\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"KeysMetadataRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"active\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"keys\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/KeyMetadataRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"Logic\": {\r\n        \"enum\": [\r\n          \"POSITIVE\",\r\n          \"NEGATIVE\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ManagementPermissionReference\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"resource\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopePermissions\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"MappingsRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realmMappings\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n            }\r\n          },\r\n          \"clientMappings\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"$ref\": \"#/components/schemas/ClientMappingsRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"MemberRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"username\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"firstName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"lastName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"emailVerified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"userProfileMetadata\": {\r\n            \"$ref\": \"#/components/schemas/UserProfileMetadata\"\r\n          },\r\n          \"self\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"origin\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"createdTimestamp\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"totp\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"federationLink\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"serviceAccountClientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"credentials\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n            }\r\n          },\r\n          \"disableableCredentialTypes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"requiredActions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"federatedIdentities\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/FederatedIdentityRepresentation\"\r\n            }\r\n          },\r\n          \"realmRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"clientRoles\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"clientConsents\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserConsentRepresentation\"\r\n            }\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"applicationRoles\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"socialLinks\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/SocialLinkRepresentation\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"groups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          \"membershipType\": {\r\n            \"$ref\": \"#/components/schemas/MembershipType\"\r\n          }\r\n        }\r\n      },\r\n      \"MembershipType\": {\r\n        \"enum\": [\r\n          \"UNMANAGED\",\r\n          \"MANAGED\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"MethodConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"method\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"scopes-enforcement-mode\": {\r\n            \"$ref\": \"#/components/schemas/ScopeEnforcementMode\"\r\n          }\r\n        }\r\n      },\r\n      \"MultivaluedHashMapStringComponentExportRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"additionalProperties\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/components/schemas/ComponentExportRepresentation\"\r\n          }\r\n        }\r\n      },\r\n      \"MultivaluedHashMapStringString\": {\r\n        \"type\": \"object\",\r\n        \"additionalProperties\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"OAuthClientRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"rootUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"adminUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"baseUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"surrogateAuthRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"alwaysDisplayInConsole\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"clientAuthenticatorType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"secret\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"registrationAccessToken\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"defaultRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"redirectUris\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webOrigins\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bearerOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"consentRequired\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"standardFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"implicitFlowEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directAccessGrantsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"serviceAccountsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"authorizationServicesEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"directGrantsOnly\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"publicClient\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"frontchannelLogout\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authenticationFlowBindingOverrides\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"fullScopeAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"nodeReRegistrationTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"registeredNodes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"format\": \"int32\",\r\n              \"type\": \"integer\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          },\r\n          \"clientTemplate\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateConfig\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateScope\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"useTemplateMappers\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"defaultClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"optionalClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"authorizationSettings\": {\r\n            \"$ref\": \"#/components/schemas/ResourceServerRepresentation\"\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          },\r\n          \"origin\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"claims\": {\r\n            \"type\": \"object\",\r\n            \"allOf\": [\r\n              {\r\n                \"$ref\": \"#/components/schemas/ClaimRepresentation\"\r\n              }\r\n            ],\r\n            \"deprecated\": true\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"OrganizationDomainRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"verified\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"OrganizationRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"redirectUrl\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"domains\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/OrganizationDomainRepresentation\"\r\n            }\r\n          },\r\n          \"members\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/MemberRepresentation\"\r\n            }\r\n          },\r\n          \"identityProviders\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"PathCacheConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"max-entries\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lifespan\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"PathConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"path\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"methods\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/MethodConfig\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"enforcement-mode\": {\r\n            \"$ref\": \"#/components/schemas/EnforcementMode\"\r\n          },\r\n          \"claim-information-point\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {}\r\n            }\r\n          },\r\n          \"invalidated\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"staticPath\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"static\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"Permission\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"rsid\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsname\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"claims\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"uniqueItems\": true,\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"PolicyEnforcementMode\": {\r\n        \"enum\": [\r\n          \"ENFORCING\",\r\n          \"PERMISSIVE\",\r\n          \"DISABLED\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"PolicyEnforcerConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"enforcement-mode\": {\r\n            \"$ref\": \"#/components/schemas/EnforcementMode\"\r\n          },\r\n          \"paths\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/PathConfig\"\r\n            }\r\n          },\r\n          \"path-cache\": {\r\n            \"$ref\": \"#/components/schemas/PathCacheConfig\"\r\n          },\r\n          \"lazy-load-paths\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"on-deny-redirect-to\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"user-managed-access\": {\r\n            \"$ref\": \"#/components/schemas/UserManagedAccessConfig\"\r\n          },\r\n          \"claim-information-point\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {}\r\n            }\r\n          },\r\n          \"http-method-as-scope\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"realm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"auth-server-url\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"credentials\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"resource\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"PolicyEvaluationRequest\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"context\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"resources\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n            }\r\n          },\r\n          \"resourceType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"roleIds\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"entitlements\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"PolicyEvaluationResponse\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"results\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/EvaluationResultRepresentation\"\r\n            }\r\n          },\r\n          \"entitlements\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"status\": {\r\n            \"$ref\": \"#/components/schemas/DecisionEffect\"\r\n          },\r\n          \"rpt\": {\r\n            \"$ref\": \"#/components/schemas/AccessToken\"\r\n          }\r\n        }\r\n      },\r\n      \"PolicyProviderRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"group\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"PolicyRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"policies\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"resources\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"logic\": {\r\n            \"$ref\": \"#/components/schemas/Logic\"\r\n          },\r\n          \"decisionStrategy\": {\r\n            \"$ref\": \"#/components/schemas/DecisionStrategy\"\r\n          },\r\n          \"owner\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourceType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resourcesData\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n            }\r\n          },\r\n          \"scopesData\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"PolicyResultRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"policy\": {\r\n            \"$ref\": \"#/components/schemas/PolicyRepresentation\"\r\n          },\r\n          \"status\": {\r\n            \"$ref\": \"#/components/schemas/DecisionEffect\"\r\n          },\r\n          \"associatedPolicies\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/PolicyResultRepresentation\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"resourceType\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"PropertyConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"applicable\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"value\": {}\r\n        }\r\n      },\r\n      \"ProtocolMapperEvaluationRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"mapperId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"mapperName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"containerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"containerName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"containerType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"protocolMapper\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"ProtocolMapperRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"protocol\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"protocolMapper\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"consentRequired\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"consentText\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"PublishedRealmRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"public_key\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"token-service\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"account-service\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"tokens-not-before\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"RealmEventsConfigRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"eventsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"eventsExpiration\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"eventsListeners\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"enabledEventTypes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"adminEventsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"adminEventsDetailsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"RealmRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"realm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayNameHtml\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"defaultSignatureAlgorithm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"revokeRefreshToken\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"refreshTokenMaxReuse\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"accessTokenLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"accessTokenLifespanForImplicitFlow\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ssoSessionIdleTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ssoSessionMaxLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ssoSessionIdleTimeoutRememberMe\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ssoSessionMaxLifespanRememberMe\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"offlineSessionIdleTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"offlineSessionMaxLifespanEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"offlineSessionMaxLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"clientSessionIdleTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"clientSessionMaxLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"clientOfflineSessionIdleTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"clientOfflineSessionMaxLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"accessCodeLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"accessCodeLifespanUserAction\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"accessCodeLifespanLogin\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"actionTokenGeneratedByAdminLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"actionTokenGeneratedByUserLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"oauth2DeviceCodeLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"oauth2DevicePollingInterval\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"sslRequired\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"passwordCredentialGrantAllowed\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"registrationAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"registrationEmailAsUsername\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"rememberMe\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"verifyEmail\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"loginWithEmailAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"duplicateEmailsAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"resetPasswordAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"editUsernameAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"userCacheEnabled\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"realmCacheEnabled\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"bruteForceProtected\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"permanentLockout\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"maxTemporaryLockouts\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bruteForceStrategy\": {\r\n            \"$ref\": \"#/components/schemas/BruteForceStrategy\"\r\n          },\r\n          \"maxFailureWaitSeconds\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"minimumQuickLoginWaitSeconds\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"waitIncrementSeconds\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"quickLoginCheckMilliSeconds\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"maxDeltaTimeSeconds\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"failureFactor\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"privateKey\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"publicKey\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"certificate\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"codeSecret\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"roles\": {\r\n            \"$ref\": \"#/components/schemas/RolesRepresentation\"\r\n          },\r\n          \"groups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/GroupRepresentation\"\r\n            }\r\n          },\r\n          \"defaultRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"defaultRole\": {\r\n            \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n          },\r\n          \"adminPermissionsClient\": {\r\n            \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n          },\r\n          \"defaultGroups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"requiredCredentials\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"passwordPolicy\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"otpPolicyType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"otpPolicyAlgorithm\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"otpPolicyInitialCounter\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"otpPolicyDigits\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"otpPolicyLookAheadWindow\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"otpPolicyPeriod\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"otpPolicyCodeReusable\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"otpSupportedApplications\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"localizationTexts\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"webAuthnPolicyRpEntityName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicySignatureAlgorithms\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webAuthnPolicyRpId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyAttestationConveyancePreference\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyAuthenticatorAttachment\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyRequireResidentKey\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyUserVerificationRequirement\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyCreateTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"webAuthnPolicyAvoidSameAuthenticatorRegister\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"webAuthnPolicyAcceptableAaguids\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webAuthnPolicyExtraOrigins\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webAuthnPolicyPasswordlessRpEntityName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessSignatureAlgorithms\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webAuthnPolicyPasswordlessRpId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessAttestationConveyancePreference\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessAuthenticatorAttachment\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessRequireResidentKey\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessUserVerificationRequirement\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessCreateTimeout\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"webAuthnPolicyPasswordlessAcceptableAaguids\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"webAuthnPolicyPasswordlessExtraOrigins\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"clientProfiles\": {\r\n            \"$ref\": \"#/components/schemas/ClientProfilesRepresentation\"\r\n          },\r\n          \"clientPolicies\": {\r\n            \"$ref\": \"#/components/schemas/ClientPoliciesRepresentation\"\r\n          },\r\n          \"users\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n            }\r\n          },\r\n          \"federatedUsers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserRepresentation\"\r\n            }\r\n          },\r\n          \"scopeMappings\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeMappingRepresentation\"\r\n            }\r\n          },\r\n          \"clientScopeMappings\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/ScopeMappingRepresentation\"\r\n              }\r\n            }\r\n          },\r\n          \"clients\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientRepresentation\"\r\n            }\r\n          },\r\n          \"clientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientScopeRepresentation\"\r\n            }\r\n          },\r\n          \"defaultDefaultClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"defaultOptionalClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"browserSecurityHeaders\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"smtpServer\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"userFederationProviders\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserFederationProviderRepresentation\"\r\n            }\r\n          },\r\n          \"userFederationMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserFederationMapperRepresentation\"\r\n            }\r\n          },\r\n          \"loginTheme\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"accountTheme\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"adminTheme\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"emailTheme\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"eventsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"eventsExpiration\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"eventsListeners\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"enabledEventTypes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"adminEventsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"adminEventsDetailsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"identityProviders\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/IdentityProviderRepresentation\"\r\n            }\r\n          },\r\n          \"identityProviderMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/IdentityProviderMapperRepresentation\"\r\n            }\r\n          },\r\n          \"protocolMappers\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ProtocolMapperRepresentation\"\r\n            }\r\n          },\r\n          \"components\": {\r\n            \"$ref\": \"#/components/schemas/MultivaluedHashMapStringComponentExportRepresentation\"\r\n          },\r\n          \"internationalizationEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"supportedLocales\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"defaultLocale\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"authenticationFlows\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/AuthenticationFlowRepresentation\"\r\n            }\r\n          },\r\n          \"authenticatorConfig\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/AuthenticatorConfigRepresentation\"\r\n            }\r\n          },\r\n          \"requiredActions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/RequiredActionProviderRepresentation\"\r\n            }\r\n          },\r\n          \"browserFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"registrationFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"directGrantFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"resetCredentialsFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientAuthenticationFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"dockerAuthenticationFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"firstBrokerLoginFlow\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"keycloakVersion\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userManagedAccessAllowed\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"organizationsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"organizations\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/OrganizationRepresentation\"\r\n            }\r\n          },\r\n          \"verifiableCredentialsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"adminPermissionsEnabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"social\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"updateProfileOnInitialSocialLogin\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"socialProviders\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"applicationScopeMappings\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/ScopeMappingRepresentation\"\r\n              }\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"applications\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ApplicationRepresentation\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"oauthClients\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/OAuthClientRepresentation\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"clientTemplates\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ClientTemplateRepresentation\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"oAuth2DeviceCodeLifespan\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"oAuth2DevicePollingInterval\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"RequiredActionConfigInfoRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"properties\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ConfigPropertyRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"RequiredActionConfigRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"RequiredActionProviderRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"alias\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"defaultAction\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ResourceOwnerRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"ResourceRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"_id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"uris\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          },\r\n          \"icon_uri\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"owner\": {\r\n            \"type\": \"object\",\r\n            \"allOf\": [\r\n              {\r\n                \"$ref\": \"#/components/schemas/ResourceOwnerRepresentation\"\r\n              }\r\n            ],\r\n            \"readOnly\": true\r\n          },\r\n          \"ownerManagedAccess\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"uri\": {\r\n            \"type\": \"string\",\r\n            \"writeOnly\": true,\r\n            \"deprecated\": true\r\n          },\r\n          \"scopesUma\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ResourceServerRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"allowRemoteResourceManagement\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"policyEnforcementMode\": {\r\n            \"$ref\": \"#/components/schemas/PolicyEnforcementMode\"\r\n          },\r\n          \"resources\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n            }\r\n          },\r\n          \"policies\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/PolicyRepresentation\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ScopeRepresentation\"\r\n            }\r\n          },\r\n          \"decisionStrategy\": {\r\n            \"$ref\": \"#/components/schemas/DecisionStrategy\"\r\n          },\r\n          \"authorizationSchema\": {\r\n            \"$ref\": \"#/components/schemas/AuthorizationSchema\"\r\n          }\r\n        }\r\n      },\r\n      \"ResourceType\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"type\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"scopeAliases\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"uniqueItems\": true,\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"groupType\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"RoleRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"scopeParamRequired\": {\r\n            \"type\": \"boolean\",\r\n            \"deprecated\": true\r\n          },\r\n          \"composite\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"composites\": {\r\n            \"$ref\": \"#/components/schemas/Composites\"\r\n          },\r\n          \"clientRole\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"containerId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"RolesRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"realm\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n            }\r\n          },\r\n          \"client\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            }\r\n          },\r\n          \"application\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/components/schemas/RoleRepresentation\"\r\n              }\r\n            },\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"ScopeEnforcementMode\": {\r\n        \"enum\": [\r\n          \"ALL\",\r\n          \"ANY\",\r\n          \"DISABLED\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ScopeMappingRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"self\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"client\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"clientTemplate\": {\r\n            \"type\": \"string\",\r\n            \"deprecated\": true\r\n          },\r\n          \"clientScope\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"roles\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"ScopeRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"iconUri\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"policies\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/PolicyRepresentation\"\r\n            }\r\n          },\r\n          \"resources\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ResourceRepresentation\"\r\n            }\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"SocialLinkRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"socialProvider\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"socialUserId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"socialUsername\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"UPAttribute\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"validations\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {}\r\n            }\r\n          },\r\n          \"annotations\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"required\": {\r\n            \"$ref\": \"#/components/schemas/UPAttributeRequired\"\r\n          },\r\n          \"permissions\": {\r\n            \"$ref\": \"#/components/schemas/UPAttributePermissions\"\r\n          },\r\n          \"selector\": {\r\n            \"$ref\": \"#/components/schemas/UPAttributeSelector\"\r\n          },\r\n          \"group\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"multivalued\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"UPAttributePermissions\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"view\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"edit\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UPAttributeRequired\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"roles\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UPAttributeSelector\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"scopes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UPConfig\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"attributes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UPAttribute\"\r\n            }\r\n          },\r\n          \"groups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UPGroup\"\r\n            }\r\n          },\r\n          \"unmanagedAttributePolicy\": {\r\n            \"$ref\": \"#/components/schemas/UnmanagedAttributePolicy\"\r\n          }\r\n        }\r\n      },\r\n      \"UPGroup\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayHeader\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayDescription\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"annotations\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          }\r\n        }\r\n      },\r\n      \"UnmanagedAttributePolicy\": {\r\n        \"enum\": [\r\n          \"ENABLED\",\r\n          \"ADMIN_VIEW\",\r\n          \"ADMIN_EDIT\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"UserConsentRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"clientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"grantedClientScopes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"createdDate\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lastUpdatedDate\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"grantedRealmRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"UserFederationMapperRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"federationProviderDisplayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"federationMapperType\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UserFederationProviderRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"providerName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"config\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"priority\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"fullSyncPeriod\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"changedSyncPeriod\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lastSync\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      },\r\n      \"UserManagedAccessConfig\": {\r\n        \"type\": \"object\"\r\n      },\r\n      \"UserProfileAttributeGroupMetadata\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayHeader\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayDescription\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"annotations\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          }\r\n        }\r\n      },\r\n      \"UserProfileAttributeMetadata\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"name\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"displayName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"required\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"readOnly\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"annotations\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {}\r\n          },\r\n          \"validators\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {}\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"multivalued\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      },\r\n      \"UserProfileMetadata\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"attributes\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserProfileAttributeMetadata\"\r\n            }\r\n          },\r\n          \"groups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserProfileAttributeGroupMetadata\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UserRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"username\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"firstName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"lastName\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"email\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"emailVerified\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"attributes\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"userProfileMetadata\": {\r\n            \"$ref\": \"#/components/schemas/UserProfileMetadata\"\r\n          },\r\n          \"self\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"origin\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"createdTimestamp\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"enabled\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"totp\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"federationLink\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"serviceAccountClientId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"credentials\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/CredentialRepresentation\"\r\n            }\r\n          },\r\n          \"disableableCredentialTypes\": {\r\n            \"uniqueItems\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"requiredActions\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"federatedIdentities\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/FederatedIdentityRepresentation\"\r\n            }\r\n          },\r\n          \"realmRoles\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"clientRoles\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"clientConsents\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/UserConsentRepresentation\"\r\n            }\r\n          },\r\n          \"notBefore\": {\r\n            \"format\": \"int32\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"applicationRoles\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"socialLinks\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/SocialLinkRepresentation\"\r\n            },\r\n            \"deprecated\": true\r\n          },\r\n          \"groups\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"access\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"boolean\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"UserSessionRepresentation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"username\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"userId\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"ipAddress\": {\r\n            \"type\": \"string\"\r\n          },\r\n          \"start\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lastAccess\": {\r\n            \"format\": \"int64\",\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rememberMe\": {\r\n            \"type\": \"boolean\"\r\n          },\r\n          \"clients\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\"\r\n            }\r\n          },\r\n          \"transientUser\": {\r\n            \"type\": \"boolean\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
      "url": "https://www.keycloak.org/docs-api/latest/rest-api/openapi.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "suppressClientClassesOutput": false,
      "generateClientInterfaces": false,
      "suppressClientInterfacesOutput": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "KeycloakClientException",
      "wrapDtoExceptions": false,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": true,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "propertySetterAccessModifier": "",
      "generateNativeRecords": false,
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}KeycloakApiClient",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": true,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "keycloak",
      "requiredPropertiesMustBeDefined": false,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "jsonPolymorphicSerializationStyle": "NJsonSchema",
      "generateDefaultValues": false,
      "generateDataAnnotations": false,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": false,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../Keycloak.ApiClient.Generated/KeycloakApiClient.cs",
      "newLineBehavior": "Auto"
    }
  }
}